{"name":"psocksxx","tagline":"A C++ wrapper for POSIX sockets","body":"psocksxx\r\n========\r\n\r\n[![GitHub release](https://img.shields.io/github/release/nukedzn/psocksxx.svg)](https://github.com/nukedzn/psocksxx/releases)\r\n[![Build Status](https://travis-ci.org/nukedzn/psocksxx.svg)](https://travis-ci.org/nukedzn/psocksxx)\r\n\r\nA C++ wrapper for POSIX sockets\r\n\r\n## Copyright and License\r\n\r\nCopyright (C) 2013-2015 Uditha Atukorala.\r\n\r\nThis software library is free software; you can redistribute it and/or modify\r\nit under the terms of the GNU Lesser General Public License as published by\r\nthe Free Software Foundation; either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nThis software library is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n[GNU Lesser General Public License](http://www.gnu.org/licenses/lgpl.html)\r\nfor more details.\r\n\r\n\r\n## The Concept\r\n\r\nThis project was started to add to the features provided by the simple\r\n[socket-library](https://github.com/uditha-atukorala/socket-library) project,\r\nspecially socket timeouts. But rather than sticking to the same class structure\r\nit was decided to use [stream buffers](http://gcc.gnu.org/onlinedocs/libstdc++/manual/streambufs.html)\r\nin C++ standard library.\r\n\r\nThe inspiration to derive from std::streambuf came from the [socket++](http://www.linuxhacker.at/socketxx)\r\nlibrary initially developed by Gnanasekaran Swaminathan. While the\r\nsocket++ library seems to be stable and feature rich, the coding style\r\nand the lack of API documentation makes it a little difficult for the\r\nbeginners.\r\n\r\npsocksxx library attempts to borrow the concepts from socket++ and\r\nsocket-library, but not the code, and create a well documented (and\r\nhopefully easy to understand) POSIX socket communication wrapper in\r\nC++. To keep the code simple and clean this project will only support\r\nPOSIX sockets.\r\n\r\n\r\n## Downloads\r\n\r\nYou can download source distributions from https://github.com/nukedzn/psocksxx/releases.\r\n\r\n\r\n### Debian/Ubuntu packages\r\n\r\nPlease check availability for your distribution first ([Debian](https://packages.debian.org/psocksxx), [Ubuntu](http://packages.ubuntu.com/psocksxx)).\r\n\r\n\t$ sudo aptitude update\r\n\t$ sudo aptitude install libpsocksxx-dev\r\n\r\n\r\n## Dependencies\r\n\r\n* CppUnit >= 1.12.1 (for unit tests)\r\n* Doxygen (for doxygen documentation, of course)\r\n\r\n\r\n## Bugs and Feature Requests\r\n\r\nPlease report all bugs and feature requests under [issues](https://github.com/nukedzn/psocksxx/issues).\r\n\r\n\r\n## Compiling from source\r\n\r\nIf you are using the github source then first you need to initialise\r\nautotools.\r\n\r\n\t$ libtoolize (glibtoolize in OS X)\r\n\t$ aclocal\r\n\t$ autoheader\r\n\t$ autoconf\r\n\t$ automake --add-missing (you will need automake >= 1.13)\r\n\r\nAfter that you can use the usual `./configure && make`\r\n\r\n\r\n## Usage\r\n\r\nPlease take a look at [examples](https://github.com/nukedzn/psocksxx/tree/master/src/examples)\r\nfor more details.\r\n\r\n### Simple Server\r\n\r\n``` c++\r\n\r\n// tcp socket stream\r\npsocksxx::tcpnsockstream ss;\r\n\r\n// network address to bind to\r\npsocksxx::nsockaddr naddr( \"localhost\", \"21555\" );\r\n\r\n// bind and listen\r\nss.bind( &naddr, true );\r\nss.listen();\r\n\r\n// accept a connection\r\npsocksxx::nsockstream * css = ss.accept();\r\n\r\n```\r\n\r\n### Simple Client\r\n\r\n``` c++\r\n// tcp socket stream\r\npsocksxx::tcpnsockstream ss;\r\n\r\n// connect\r\nss.connect( \"localhost\", 21555 );\r\n\r\n// send a message\r\nss << \"hello\" << std::endl;\r\n\r\n// receive a message\r\nstd::string msg;\r\nss >> msg;\r\n```\r\n\r\n\r\n## API Documentation\r\n\r\n* [v1.0](https://nukedzn.github.io/psocksxx/docs/v1.0)\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}